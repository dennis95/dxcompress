# Copyright (c) 2020 Dennis WÃ¶lfing
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@ -I.
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
install_sh = $(srcdir)/install-sh
STRIP = @STRIP@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
datarootdir = @datarootdir@
mandir = @mandir@
man1dir = $(mandir)/man1

cross_compiling = @cross_compiling@
transform = @program_transform_name@

SRC = deflate.c lzw.c main.c xz.c
OBJ = $(SRC:%.c=%.o)
distdir = @PACKAGE_NAME@-@PACKAGE_VERSION@
DISTFILES = $(SRC) algorithm.h compress.1 \
	m4/ m4/check-cflags.m4 m4/pkg-config.m4 m4/wrappers.m4 \
	.gitignore .travis.yml \
	configure.ac configure config.h.in Makefile.in install-sh \
	autogen.sh make-wrappers.sh test-compress.sh \
	LICENSE README.md
WRAPPERS = @WRAPPERS@

all: compress $(WRAPPERS)

compress: $(OBJ)
	$(CC) $(LDFLAGS) -o compress $(OBJ) $(LIBS)

$(WRAPPERS): make-wrappers.sh Makefile
	$(srcdir)/make-wrappers.sh "$(bindir)/$$(echo compress | sed '$(transform)')" $@

.c.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<

$(OBJ): algorithm.h config.h Makefile

check: check-$(cross_compiling)
check-yes:
	@echo "Cannot run tests when cross-compiling."

check-no: compress
	COMPRESS='$(PWD)/compress' $(srcdir)/test-compress.sh

installcheck: installcheck-$(cross_compiling)
installcheck-yes:
	@echo "Cannot run tests when cross-compiling."

installcheck-no:
	COMPRESS="$(bindir)/$$(echo compress | sed '$(transform)')" \
	UNCOMPRESS="$(bindir)/$$(echo uncompress | sed '$(transform)')" \
	$(srcdir)/test-compress.sh

# Of course we want to use our own implementation to compress the tarballs!
dist: dist-$(cross_compiling)
dist-no: compress
	rm -rf $(distdir)
	mkdir $(distdir)
	for file in $(DISTFILES); do \
		case $$file in \
		*/) mkdir -p $(distdir)/$$file ;; \
		*) cp $(srcdir)/$$file $(distdir)/$$file; \
		esac; \
	done
	tar cf $(distdir).tar $(distdir)
	for algo in lzw gzip xz; do \
		./compress -fkv -m $$algo $(distdir).tar; \
	done
	rm -rf $(distdir) $(distdir).tar

dist-yes:
	@echo "Please configure with build = host before running '$(MAKE) dist'."
	@false

distcheck: dist
	rm -rf distcheck
	mkdir -p distcheck/build
	cd distcheck && tar xf ../$(distdir).tar.xz && chmod -R a-w $(distdir) && \
	cd build && ../$(distdir)/configure --prefix=$(PWD)/distcheck/install && \
	$(MAKE) && $(MAKE) check && \
	$(MAKE) install && $(MAKE) installcheck && \
	$(MAKE) uninstall && ! find $(PWD)/distcheck/install -type f | grep . && \
	$(MAKE) dist && rm -f $(distdir).tar.* && \
	$(MAKE) distclean && ! find $(PWD)/distcheck/build -type f | grep .
	chmod -R +w distcheck
	rm -rf distcheck
	@echo "Files are ready for distribution."

install: install-exec install-data
install-data: install-man
install-man:
	mkdir -p '$(DESTDIR)$(man1dir)'
	$(INSTALL_DATA) $(srcdir)/compress.1 "$(DESTDIR)$(man1dir)/$$(echo compress | sed '$(transform)').1"

install-exec: install-compress install-wrappers
install-compress: compress
	mkdir -p '$(DESTDIR)$(bindir)'
	$(INSTALL_PROGRAM) compress "$(DESTDIR)$(bindir)/$$(echo compress | sed '$(transform)')"

install-wrappers: $(WRAPPERS)
	mkdir -p '$(DESTDIR)$(bindir)'
	for wrapper in $(WRAPPERS); do \
		$(INSTALL_SCRIPT) $$wrapper "$(DESTDIR)$(bindir)/$$(echo $$wrapper | sed '$(transform)')"; \
	done

install-strip: install-strip-exec install-data
install-strip-exec: install-strip-compress install-wrappers
install-strip-compress: compress
	mkdir -p '$(DESTDIR)$(bindir)'
	STRIPPROG='$(STRIP)' $(install_sh) -s compress "$(DESTDIR)$(bindir)/$$(echo compress | sed '$(transform)')"

uninstall:
	for prog in compress $(WRAPPERS); do \
		rm -f "$(DESTDIR)$(bindir)/$$(echo $$prog | sed '$(transform)')"; \
	done
	rm -f "$(DESTDIR)$(man1dir)/$$(echo compress | sed '$(transform)').1"

clean:
	rm -f compress *.o
	rm -f uncompress zcat gzip gunzip xz unxz xzcat
	rm -rf tests

distclean: clean
	rm -rf autom4te.cache
	rm -f config.cache config.h config.h.in~ config.status config.log Makefile

.PHONY: all check check-yes check-no dist dist-yes dist-no distcheck
.PHONY: installcheck installcheck-yes installcheck-no uninstall clean distclean
.PHONY: install install-compress install-data install-exec install-man
.PHONY: install-wrappers install-strip install-strip-compress install-strip-exec
