.Dd December 23, 2022
.Dt COMPRESS 1
.Os Dennix
.Sh NAME
.Nm compress ,
.Nm uncompress ,
.Nm zcat
.Nd compress and decompress data
.Sh SYNOPSIS
.Nm
.Op Fl 0123456789cdfghklnNOqrtvVz
.Op Fl b Ar level
.Op Fl m Ar algo
.Op Fl o Ar filename
.Op Fl S Ar suffix
.Op Fl T Ar threads
.Op Ar files...
.Nm uncompress
.Op Fl 0123456789cdfghklnNOqrtvVz
.Op Fl b Ar level
.Op Fl m Ar algo
.Op Fl o Ar filename
.Op Fl S Ar suffix
.Op Fl T Ar threads
.Op Ar files...
.Nm zcat
.Op Fl 0123456789cdfghklnNOqrtvVz
.Op Fl b Ar level
.Op Fl m Ar algo
.Op Fl o Ar filename
.Op Fl S Ar suffix
.Op Fl T Ar threads
.Op Ar files...
.Sh DESCRIPTION
The
.Nm
utility compresses or decompresses files.
Multiple compression algorithms are supported.
.Pp
The following options choose the operating mode of
.Nm :
.Bl -tag -width Ds
.It Fl d , -decompress , -uncompress
Decompress files.
Each operand is taken as an input file to be decompressed.
When an operand is named
.Cm - ,
or if no operands are given, the standard input is used as the input file and
the decompressed data is written to the standard output.
If an operand has no suffix associated with a supported algorithm, or if no file
named by the operand exists and the operand does not end with
.Pa .Z ,
the suffix
.Pa .Z
is appended to the operand and the resulting name is used as the input file.
.Pp
Unless the
.Fl c
option is specified, the algorithm used for decompression is the one associated
with the suffix of the input file.
When the
.Fl c
option is specified, the algorithm is instead determined by the file contents.
.It Fl l , -list
List information about compressed files.
The following information is listed:
.Bl -tag -width "uncompressed name"
.It compressed
The size of the compressed file.
.It uncompressed
The size of the uncompressed file.
.It ratio
The compression ratio by which the size of the file was reduced.
.It uncompressed name
The name that will be used for the output file when decompressing.
It the
.Fl N
option is specified, this will be the name saved inside the compressed file if
any, otherwise this is the name of the compressed file with its suffix removed.
.El
.Pp
If the
.Fl v
option is specified, the following additional information is printed in front of
the information above:
.Bl -tag -width "uncompressed name"
.It method
The algorithm that was used for compression.
This value is suitable for use as an argument to the
.Fl m
option.
.It crc
The 32-bit CRC (cyclic redundancy code) of the uncompressed data, if it is saved
within the compressed file.
For algorithms other than DEFLATE, this value is printed as
.Li ffffffff .
.It date , time
The modification date and time of the compressed data.
If the
.Fl N
option is specified, this will be the modification time saved inside the
compressed file if any, otherwise this is the modification time of the
compressed file itself.
.El
.Pp
A title line listing the information that is printed is also displayed, unless
the
.Fl q
option is specified.
.It Fl t , -test
Test the integrity of compressed files without changing any files.
.It Fl z , -compress
Compress files.
Each operand is taken as an input file to be compressed.
When an operand is named
.Cm - ,
or if no operands are given, the standard input is used as the input file and
the compressed data is written to the standard output.
.Pp
Unless the
.Fl c
option is specified, the compressed output is written into a file named like the
input file but with the suffix associated to the algorithm appended.
If the compression does not result in a size reduction and the
.Fl f
option is not given, the output file is unlinked and the input file is not
unlinked.
Otherwise, the input file is unlinked.
.El
.Pp
These options may be given multiple times.
Only the last of these options selects the mode.
The default mode for
.Nm
is compression
.Pq Fl z .
The
.Nm uncompress
utility is used for decompression and is equivalent to
.Nm
.Fl d .
The
.Nm zcat
utility decompresses files to the standard output and is equivalent to
.Nm
.Fl cd .
Both
.Nm uncompress
and
.Nm zcat
support all options supported by
.Nm .
.Pp
The following options are supported by
.Nm :
.Bl -tag -width Ds
.It Fl 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9
Set the compression level to the number given.
These options are equivalent to use of the
.Fl b
option with the number given as an option argument, except that the DEFLATE
(gzip) algorithm is used if no compression algorithm was selected explicitly
using the
.Fl g , m
or
.Fl O
options.
.It Fl b Ar level
Set the compression level.
The meaning depends on the compression algorithm used.
Usually a higher
.Ar level
achieves higher compression but might be slower.
For the LZW algorithm,
.Ar level
specifies the maximum number of bits to use in a code.
The values must be between 9 and 16 inclusive.
For the DEFLATE algorithm,
.Ar level
must be between 1 and 9 inclusive.
For the XZ format,
.Ar level
must be between 0 and 9 inclusive.
.It Fl c , -stdout , -to-stdout
Write the result of compression or decompression to the standard output and do
not unlink the input files.
For decompression, when the
.Fl c
option is used the algorithm is determined only by the file contents, not by the
file extension.
.It Fl f , -force
Always produce an output file even if compression does not result in a reduced
size.
Also overwrite existing output files without asking for confirmation.
.Pp
When used with the
.Fl c
and
.Fl d
options, any files that are not in a recognized format are written to the
standard output without change.
.It Fl g
Use the DEFLATE (gzip) algorithm for compression.
Equivalent to
.Fl m Cm gzip .
.It Fl h , -help
Print a short help message and exit.
.It Fl k , -keep
Do not unlink input files.
.It Fl m Ar algo
For compression use the compression algorithm specified by
.Ar algo .
This option has no effect on decompression.
The following compression algorithms are supported:
.Bl -tag -width deflate
.It Cm deflate
The DEFLATE (gzip) algorithm.
The suffix associated with this algorithm is
.Pa .gz .
Additionally when decompressing, the suffix
.Pa .tgz
is supported which will be replaced by
.Pa .tar
to produce the output file name.
.It Cm gzip
Synonym for
.Cm deflate .
.It Cm lzw
The Lempel-Ziv-Welch (LZW) algorithm.
The suffix associated with this algorithm is
.Pa .Z .
Additionally when decompressing, the suffix
.Pa .taz
is supported which will be replaced by
.Pa .tar
to produce the output file name.
This algorithm is used by default.
.It Cm xz
The XZ format.
The suffix associated with this algorithm is
.Pa .xz .
Additionally when decompressing, the suffix
.Pa .txz
is supported which will be replaced by
.Pa .tar
to produce the output file name.
.El
.It Fl n , -no-name
When compressing, do not save the original file name and modification time in
the compressed file.
Undo the effects of any previously specified
.Fl N
option.
.It Fl N , -name
When decompressing, use the file name saved inside the compressed file if any as
the output file name and restore the saved modification time.
Note that not all algorithms support saving the original file name and
modification time.
Undo the effects of any previously specified
.Fl n
option.
.It Fl o Ar filename
Use
.Ar filename
as the output file name.
This option cannot be used with multiple input files or with any of the
.Fl clrt
options.
.It Fl O
Use the Lempel-Ziv-Welch (LZW) algorithm for compression.
Equivalent to
.Fl m Cm lzw .
.It Fl q , -quiet
Suppress any warnings.
Errors are still displayed.
Undo the effects of any previously specified
.Fl v
option.
.It Fl r , -recursive
Recursively compress or decompress directories.
For any given operand that names a directory, all files in that directory are
compressed or decompressed.
If a file in a directory already has the file extension associated with the used
algorithm, that file will be ignored.
.It Fl S Ar suffix , Fl -suffix Ns = Ns Ar suffix
When compressing, use
.Ar suffix
as the suffix of the output file instead of the suffix associated with the
algorithm.
.Pp
When decompressing, if the file named by an operand does not exist or has no
suffix associated with an algorithm, the operand is taken as the output file and
.Ar suffix
is appended to get the input name.
The algorithm for decompression is then determined by the file contents instead
of by the suffix.
.It Fl T Ar threads , Fl -threads Ns = Ns Ar threads
Use up to
.Ar threads
threads for compression.
Multithreading is currently only supported for XZ compression.
When
.Ar threads
is 0
.Nm
will use one thread per CPU core.
.Pp
If the
.Fl T
option is not used
.Nm
will use a number of threads determined by the number of CPUs and the amount of
available memory.
.It Fl v , -verbose
For each file print the size reduction or expansion of the file.
Undo the effects of any previously specified
.Fl q
option.
.It Fl V , -version
Print version information and exit.
.It Fl -best
Select the highest possible compression level.
.It Fl -fast
Select the lowest possible compression level.
.El
.Sh EXIT STATUS
The
.Nm
utility exits 0 if all input files were successfully compressed or decompressed.
It exits 1 or >2 when an error occured.
It exits 2 when at least one files was not compressed because compression would
have resulted in an increase of size.
.Pp
.Ex -std uncompress zcat
.Sh SEE ALSO
.Xr gzip 1 ,
.Xr tar 1 ,
.Xr xz 1
.Sh STANDARDS
The
.St -p1003.1-2008
standard specifies the
.Nm ,
.Nm uncompress
and
.Nm zcat
utilities as part of the XSI option.
Only the
.Fl bcfv
options and the Lempel-Ziv-Welch algorithm with between 9 and 14 bits per code
are standardized.
.Pp
The next revision of the POSIX.1 standard will additionally standardize the
.Fl dgm
options, add the DEFLATE algorithm and allow 15 and 16 bits per code for the LZW
algorithm.
.Pp
All other options are extensions to the standard.
.Pp
The DEFLATE compression algorithm and the gzip file format are standardized in
RFC1951 and RFC1952.
.Sh HISTORY
The
.Nm
utility was first implemented by
.An Spencer Thomas
in 1984.
The first
.Nm
implementation that supported the DEFLATE algorithm was the version that
appeared in
.Ox 2.1
in 1997.
.Pp
dxcompress 1.0 (released in 2020) was the first
.Nm
implementation that implemented all new requirements from POSIX.1-202x draft 1.
It was also the first
.Nm
implementation that supported XZ compression.
.Pp
Support for multithreaded XZ compression and the
.Fl Tz
options were added in dxcompress 1.1.
